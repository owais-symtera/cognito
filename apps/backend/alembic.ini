# Alembic Configuration for CognitoAI Engine Pharmaceutical Intelligence Platform
# Comprehensive database migration system with pharmaceutical regulatory compliance

[alembic]
# Path to migration scripts directory
script_location = alembic

# Template used to generate migration files
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d_%%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
# defaults to the current working directory.
prepend_sys_path = .

# Timezone for pharmaceutical audit compliance
timezone = UTC

# Max length of characters to apply to the "slug" field
# truncate_slug_length = 40

# Set to 'true' to run the environment during the 'revision' command,
# regardless of autogenerate
# revision_environment = false

# Set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# Version table name for pharmaceutical migration tracking
version_table = alembic_version

# Version table schema for pharmaceutical database organization
# version_table_schema = public

# Version path separator; As mentioned above, this is the separator used to split
# version_path_separator = :
# version_path_separator = ;
# version_path_separator = space
version_path_separator = os

# The output encoding used when revision files
# are written from script.py.mako
# output_encoding = utf-8

# Database URL will be loaded from environment
sqlalchemy.url = postgresql://user:pass@localhost/db

[post_write_hooks]
# Post-write hooks for pharmaceutical code quality
# format using "black" - use the console_scripts runner, against the "black" entrypoint
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = --line-length 88 --target-version py311 REVISION_SCRIPT_FILENAME

# Lint with ruff
# hooks = ruff
# ruff.type = console_scripts
# ruff.entrypoint = ruff
# ruff.options = --fix REVISION_SCRIPT_FILENAME

# Logging configuration for pharmaceutical migration monitoring
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S